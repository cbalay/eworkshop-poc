package com.productys.poc.composite.divers;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.RichTextArea;

public class TestTooltipComposite extends CustomComponent {

	@AutoGenerated
  private AbsoluteLayout mainLayout;
	@AutoGenerated
  private Button button_1;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public TestTooltipComposite() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
  private AbsoluteLayout buildMainLayout() {
	  // common part: create layout
	  mainLayout = new AbsoluteLayout();
	  mainLayout.setImmediate(false);
	  mainLayout.setWidth("100%");
	  mainLayout.setHeight("100%");
	  mainLayout.setMargin(false);
	  
	  // top-level component properties
	  setWidth("100.0%");
	  setHeight("100.0%");
	  
	  // Description
	  final RichTextArea rte = new RichTextArea();
    rte.setValue("Click <b>Toto</b> to edit this tooltip, then <b>Titi</b><ul><li>toto 1</li><li>toto 2</li><li>toto 3</li></ul>");
	  
	  // button_1
	  button_1 = new Button();
	  button_1.setCaption("Clic");
	  button_1.setImmediate(false);
	  button_1.setDescription((String) rte.getValue());
	  button_1.setWidth("-1px");
	  button_1.setHeight("-1px");
	  mainLayout.addComponent(button_1, "top:260.0px;left:340.0px;");
	  
	  return mainLayout;
  }

}
